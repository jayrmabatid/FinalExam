#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MajorExam.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MABATID_JAYR")]
	public partial class itelectdbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertMstUserType(MstUserType instance);
    partial void UpdateMstUserType(MstUserType instance);
    partial void DeleteMstUserType(MstUserType instance);
    partial void InsertMstLibraryCard(MstLibraryCard instance);
    partial void UpdateMstLibraryCard(MstLibraryCard instance);
    partial void DeleteMstLibraryCard(MstLibraryCard instance);
    partial void InsertMstLibraryBook(MstLibraryBook instance);
    partial void UpdateMstLibraryBook(MstLibraryBook instance);
    partial void DeleteMstLibraryBook(MstLibraryBook instance);
    partial void InsertTrnBorrow(TrnBorrow instance);
    partial void UpdateTrnBorrow(TrnBorrow instance);
    partial void DeleteTrnBorrow(TrnBorrow instance);
    partial void InsertMstBorrower(MstBorrower instance);
    partial void UpdateMstBorrower(MstBorrower instance);
    partial void DeleteMstBorrower(MstBorrower instance);
    #endregion
		
		public itelectdbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public itelectdbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public itelectdbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public itelectdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public itelectdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<MstUserType> MstUserTypes
		{
			get
			{
				return this.GetTable<MstUserType>();
			}
		}
		
		public System.Data.Linq.Table<MstLibraryCard> MstLibraryCards
		{
			get
			{
				return this.GetTable<MstLibraryCard>();
			}
		}
		
		public System.Data.Linq.Table<MstLibraryBook> MstLibraryBooks
		{
			get
			{
				return this.GetTable<MstLibraryBook>();
			}
		}
		
		public System.Data.Linq.Table<TrnBorrow> TrnBorrows
		{
			get
			{
				return this.GetTable<TrnBorrow>();
			}
		}
		
		public System.Data.Linq.Table<MstBorrower> MstBorrowers
		{
			get
			{
				return this.GetTable<MstBorrower>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Password;
		
		private int _UserTypeId;
		
		private string _AspNetUserId;
		
		private string _UserName;
		
		private string _Email;
		
		private EntitySet<MstLibraryCard> _MstLibraryCards;
		
		private EntitySet<MstLibraryCard> _MstLibraryCards1;
		
		private EntitySet<MstLibraryCard> _MstLibraryCards2;
		
		private EntitySet<MstLibraryBook> _MstLibraryBooks;
		
		private EntitySet<MstLibraryBook> _MstLibraryBooks1;
		
		private EntitySet<TrnBorrow> _TrnBorrows;
		
		private EntitySet<TrnBorrow> _TrnBorrows1;
		
		private EntitySet<MstBorrower> _MstBorrowers;
		
		private EntitySet<MstBorrower> _MstBorrowers1;
		
		private EntityRef<MstUserType> _MstUserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserTypeIdChanging(int value);
    partial void OnUserTypeIdChanged();
    partial void OnAspNetUserIdChanging(string value);
    partial void OnAspNetUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public MstUser()
		{
			this._MstLibraryCards = new EntitySet<MstLibraryCard>(new Action<MstLibraryCard>(this.attach_MstLibraryCards), new Action<MstLibraryCard>(this.detach_MstLibraryCards));
			this._MstLibraryCards1 = new EntitySet<MstLibraryCard>(new Action<MstLibraryCard>(this.attach_MstLibraryCards1), new Action<MstLibraryCard>(this.detach_MstLibraryCards1));
			this._MstLibraryCards2 = new EntitySet<MstLibraryCard>(new Action<MstLibraryCard>(this.attach_MstLibraryCards2), new Action<MstLibraryCard>(this.detach_MstLibraryCards2));
			this._MstLibraryBooks = new EntitySet<MstLibraryBook>(new Action<MstLibraryBook>(this.attach_MstLibraryBooks), new Action<MstLibraryBook>(this.detach_MstLibraryBooks));
			this._MstLibraryBooks1 = new EntitySet<MstLibraryBook>(new Action<MstLibraryBook>(this.attach_MstLibraryBooks1), new Action<MstLibraryBook>(this.detach_MstLibraryBooks1));
			this._TrnBorrows = new EntitySet<TrnBorrow>(new Action<TrnBorrow>(this.attach_TrnBorrows), new Action<TrnBorrow>(this.detach_TrnBorrows));
			this._TrnBorrows1 = new EntitySet<TrnBorrow>(new Action<TrnBorrow>(this.attach_TrnBorrows1), new Action<TrnBorrow>(this.detach_TrnBorrows1));
			this._MstBorrowers = new EntitySet<MstBorrower>(new Action<MstBorrower>(this.attach_MstBorrowers), new Action<MstBorrower>(this.detach_MstBorrowers));
			this._MstBorrowers1 = new EntitySet<MstBorrower>(new Action<MstBorrower>(this.attach_MstBorrowers1), new Action<MstBorrower>(this.detach_MstBorrowers1));
			this._MstUserType = default(EntityRef<MstUserType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", DbType="Int NOT NULL")]
		public int UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					if (this._MstUserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetUserId", DbType="NChar(50)")]
		public string AspNetUserId
		{
			get
			{
				return this._AspNetUserId;
			}
			set
			{
				if ((this._AspNetUserId != value))
				{
					this.OnAspNetUserIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetUserId = value;
					this.SendPropertyChanged("AspNetUserId");
					this.OnAspNetUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NChar(1255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryCard", Storage="_MstLibraryCards", ThisKey="Id", OtherKey="LibraryInChargeUserId")]
		public EntitySet<MstLibraryCard> MstLibraryCards
		{
			get
			{
				return this._MstLibraryCards;
			}
			set
			{
				this._MstLibraryCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryCard1", Storage="_MstLibraryCards1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<MstLibraryCard> MstLibraryCards1
		{
			get
			{
				return this._MstLibraryCards1;
			}
			set
			{
				this._MstLibraryCards1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryCard2", Storage="_MstLibraryCards2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<MstLibraryCard> MstLibraryCards2
		{
			get
			{
				return this._MstLibraryCards2;
			}
			set
			{
				this._MstLibraryCards2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryBook", Storage="_MstLibraryBooks", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<MstLibraryBook> MstLibraryBooks
		{
			get
			{
				return this._MstLibraryBooks;
			}
			set
			{
				this._MstLibraryBooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryBook1", Storage="_MstLibraryBooks1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<MstLibraryBook> MstLibraryBooks1
		{
			get
			{
				return this._MstLibraryBooks1;
			}
			set
			{
				this._MstLibraryBooks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnBorrow", Storage="_TrnBorrows", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<TrnBorrow> TrnBorrows
		{
			get
			{
				return this._TrnBorrows;
			}
			set
			{
				this._TrnBorrows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnBorrow1", Storage="_TrnBorrows1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<TrnBorrow> TrnBorrows1
		{
			get
			{
				return this._TrnBorrows1;
			}
			set
			{
				this._TrnBorrows1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBorrower", Storage="_MstBorrowers", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<MstBorrower> MstBorrowers
		{
			get
			{
				return this._MstBorrowers;
			}
			set
			{
				this._MstBorrowers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBorrower1", Storage="_MstBorrowers1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<MstBorrower> MstBorrowers1
		{
			get
			{
				return this._MstBorrowers1;
			}
			set
			{
				this._MstBorrowers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUserType_MstUser", Storage="_MstUserType", ThisKey="UserTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstUserType MstUserType
		{
			get
			{
				return this._MstUserType.Entity;
			}
			set
			{
				MstUserType previousValue = this._MstUserType.Entity;
				if (((previousValue != value) 
							|| (this._MstUserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUserType.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstUserType.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._UserTypeId = value.Id;
					}
					else
					{
						this._UserTypeId = default(int);
					}
					this.SendPropertyChanged("MstUserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstLibraryCards(MstLibraryCard entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstLibraryCards(MstLibraryCard entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstLibraryCards1(MstLibraryCard entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstLibraryCards1(MstLibraryCard entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstLibraryCards2(MstLibraryCard entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstLibraryCards2(MstLibraryCard entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstLibraryBooks(MstLibraryBook entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstLibraryBooks(MstLibraryBook entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstLibraryBooks1(MstLibraryBook entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstLibraryBooks1(MstLibraryBook entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnBorrows(TrnBorrow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnBorrows(TrnBorrow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnBorrows1(TrnBorrow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnBorrows1(TrnBorrow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstBorrowers(MstBorrower entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstBorrowers(MstBorrower entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstBorrowers1(MstBorrower entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstBorrowers1(MstBorrower entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserType")]
	public partial class MstUserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserType;
		
		private EntitySet<MstUser> _MstUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    #endregion
		
		public MstUserType()
		{
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUserType_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="UserTypeId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstUserType = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstUserType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstLibraryCard")]
	public partial class MstLibraryCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LibraryCardNumber;
		
		private int _ManualLibraryCardNumber;
		
		private int _BorrowerId;
		
		private bool _IsPrinted;
		
		private int _LibraryInChargeUserId;
		
		private string _FootNote;
		
		private int _CreatedByUserId;
		
		private string _CreatedDate;
		
		private int _UpdatedByUserId;
		
		private string _UpdatedDate;
		
		private EntitySet<TrnBorrow> _TrnBorrows;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstBorrower> _MstBorrower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLibraryCardNumberChanging(int value);
    partial void OnLibraryCardNumberChanged();
    partial void OnManualLibraryCardNumberChanging(int value);
    partial void OnManualLibraryCardNumberChanged();
    partial void OnBorrowerIdChanging(int value);
    partial void OnBorrowerIdChanged();
    partial void OnIsPrintedChanging(bool value);
    partial void OnIsPrintedChanged();
    partial void OnLibraryInChargeUserIdChanging(int value);
    partial void OnLibraryInChargeUserIdChanged();
    partial void OnFootNoteChanging(string value);
    partial void OnFootNoteChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateChanging(string value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public MstLibraryCard()
		{
			this._TrnBorrows = new EntitySet<TrnBorrow>(new Action<TrnBorrow>(this.attach_TrnBorrows), new Action<TrnBorrow>(this.detach_TrnBorrows));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstBorrower = default(EntityRef<MstBorrower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryCardNumber", DbType="Int NOT NULL")]
		public int LibraryCardNumber
		{
			get
			{
				return this._LibraryCardNumber;
			}
			set
			{
				if ((this._LibraryCardNumber != value))
				{
					this.OnLibraryCardNumberChanging(value);
					this.SendPropertyChanging();
					this._LibraryCardNumber = value;
					this.SendPropertyChanged("LibraryCardNumber");
					this.OnLibraryCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualLibraryCardNumber", DbType="Int NOT NULL")]
		public int ManualLibraryCardNumber
		{
			get
			{
				return this._ManualLibraryCardNumber;
			}
			set
			{
				if ((this._ManualLibraryCardNumber != value))
				{
					this.OnManualLibraryCardNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualLibraryCardNumber = value;
					this.SendPropertyChanged("ManualLibraryCardNumber");
					this.OnManualLibraryCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerId", DbType="Int NOT NULL")]
		public int BorrowerId
		{
			get
			{
				return this._BorrowerId;
			}
			set
			{
				if ((this._BorrowerId != value))
				{
					if (this._MstBorrower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBorrowerIdChanging(value);
					this.SendPropertyChanging();
					this._BorrowerId = value;
					this.SendPropertyChanged("BorrowerId");
					this.OnBorrowerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit NOT NULL")]
		public bool IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryInChargeUserId", DbType="Int NOT NULL")]
		public int LibraryInChargeUserId
		{
			get
			{
				return this._LibraryInChargeUserId;
			}
			set
			{
				if ((this._LibraryInChargeUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLibraryInChargeUserIdChanging(value);
					this.SendPropertyChanging();
					this._LibraryInChargeUserId = value;
					this.SendPropertyChanged("LibraryInChargeUserId");
					this.OnLibraryInChargeUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FootNote", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string FootNote
		{
			get
			{
				return this._FootNote;
			}
			set
			{
				if ((this._FootNote != value))
				{
					this.OnFootNoteChanging(value);
					this.SendPropertyChanging();
					this._FootNote = value;
					this.SendPropertyChanged("FootNote");
					this.OnFootNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstLibraryCard_TrnBorrow", Storage="_TrnBorrows", ThisKey="Id", OtherKey="LibraryCardId")]
		public EntitySet<TrnBorrow> TrnBorrows
		{
			get
			{
				return this._TrnBorrows;
			}
			set
			{
				this._TrnBorrows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryCard", Storage="_MstUser", ThisKey="LibraryInChargeUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstLibraryCards.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstLibraryCards.Add(this);
						this._LibraryInChargeUserId = value.Id;
					}
					else
					{
						this._LibraryInChargeUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryCard1", Storage="_MstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstLibraryCards1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstLibraryCards1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryCard2", Storage="_MstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstLibraryCards2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstLibraryCards2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBorrower_MstLibraryCard", Storage="_MstBorrower", ThisKey="BorrowerId", OtherKey="Id", IsForeignKey=true)]
		public MstBorrower MstBorrower
		{
			get
			{
				return this._MstBorrower.Entity;
			}
			set
			{
				MstBorrower previousValue = this._MstBorrower.Entity;
				if (((previousValue != value) 
							|| (this._MstBorrower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBorrower.Entity = null;
						previousValue.MstLibraryCards.Remove(this);
					}
					this._MstBorrower.Entity = value;
					if ((value != null))
					{
						value.MstLibraryCards.Add(this);
						this._BorrowerId = value.Id;
					}
					else
					{
						this._BorrowerId = default(int);
					}
					this.SendPropertyChanged("MstBorrower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnBorrows(TrnBorrow entity)
		{
			this.SendPropertyChanging();
			entity.MstLibraryCard = this;
		}
		
		private void detach_TrnBorrows(TrnBorrow entity)
		{
			this.SendPropertyChanging();
			entity.MstLibraryCard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstLibraryBook")]
	public partial class MstLibraryBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BookNumber;
		
		private string _Title;
		
		private string _Author;
		
		private string _EditionNumber;
		
		private string _PlaceOfPublication;
		
		private string _CopyRightDate;
		
		private string _ISBN;
		
		private int _CreatedByUserId;
		
		private string _CreatedBy;
		
		private string _CreatedDate;
		
		private int _UpdatedByUserId;
		
		private string _UpdatedBy;
		
		private string _UpdatedDate;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBookNumberChanging(int value);
    partial void OnBookNumberChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnEditionNumberChanging(string value);
    partial void OnEditionNumberChanged();
    partial void OnPlaceOfPublicationChanging(string value);
    partial void OnPlaceOfPublicationChanged();
    partial void OnCopyRightDateChanging(string value);
    partial void OnCopyRightDateChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(string value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public MstLibraryBook()
		{
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNumber", DbType="Int NOT NULL")]
		public int BookNumber
		{
			get
			{
				return this._BookNumber;
			}
			set
			{
				if ((this._BookNumber != value))
				{
					this.OnBookNumberChanging(value);
					this.SendPropertyChanging();
					this._BookNumber = value;
					this.SendPropertyChanged("BookNumber");
					this.OnBookNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditionNumber", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string EditionNumber
		{
			get
			{
				return this._EditionNumber;
			}
			set
			{
				if ((this._EditionNumber != value))
				{
					this.OnEditionNumberChanging(value);
					this.SendPropertyChanging();
					this._EditionNumber = value;
					this.SendPropertyChanged("EditionNumber");
					this.OnEditionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfPublication", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string PlaceOfPublication
		{
			get
			{
				return this._PlaceOfPublication;
			}
			set
			{
				if ((this._PlaceOfPublication != value))
				{
					this.OnPlaceOfPublicationChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfPublication = value;
					this.SendPropertyChanged("PlaceOfPublication");
					this.OnPlaceOfPublicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopyRightDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string CopyRightDate
		{
			get
			{
				return this._CopyRightDate;
			}
			set
			{
				if ((this._CopyRightDate != value))
				{
					this.OnCopyRightDateChanging(value);
					this.SendPropertyChanging();
					this._CopyRightDate = value;
					this.SendPropertyChanged("CopyRightDate");
					this.OnCopyRightDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryBook", Storage="_MstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstLibraryBooks.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstLibraryBooks.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstLibraryBook1", Storage="_MstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstLibraryBooks1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstLibraryBooks1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnBorrow")]
	public partial class TrnBorrow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BorrowNumber;
		
		private int _BookNumber;
		
		private string _BorrowDate;
		
		private int _ManualBorrowNumber;
		
		private int _BorrowerId;
		
		private int _LibraryCardId;
		
		private string _PreparedByUser;
		
		private int _CreatedByUserId;
		
		private string _CreatedDate;
		
		private int _UpdatedByUserId;
		
		private string _UpdatedDate;
		
		private EntityRef<MstLibraryCard> _MstLibraryCard;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstBorrower> _MstBorrower;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBorrowNumberChanging(int value);
    partial void OnBorrowNumberChanged();
    partial void OnBookNumberChanging(int value);
    partial void OnBookNumberChanged();
    partial void OnBorrowDateChanging(string value);
    partial void OnBorrowDateChanged();
    partial void OnManualBorrowNumberChanging(int value);
    partial void OnManualBorrowNumberChanged();
    partial void OnBorrowerIdChanging(int value);
    partial void OnBorrowerIdChanged();
    partial void OnLibraryCardIdChanging(int value);
    partial void OnLibraryCardIdChanged();
    partial void OnPreparedByUserChanging(string value);
    partial void OnPreparedByUserChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateChanging(string value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public TrnBorrow()
		{
			this._MstLibraryCard = default(EntityRef<MstLibraryCard>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstBorrower = default(EntityRef<MstBorrower>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowNumber", DbType="Int NOT NULL")]
		public int BorrowNumber
		{
			get
			{
				return this._BorrowNumber;
			}
			set
			{
				if ((this._BorrowNumber != value))
				{
					this.OnBorrowNumberChanging(value);
					this.SendPropertyChanging();
					this._BorrowNumber = value;
					this.SendPropertyChanged("BorrowNumber");
					this.OnBorrowNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNumber", DbType="Int NOT NULL")]
		public int BookNumber
		{
			get
			{
				return this._BookNumber;
			}
			set
			{
				if ((this._BookNumber != value))
				{
					this.OnBookNumberChanging(value);
					this.SendPropertyChanging();
					this._BookNumber = value;
					this.SendPropertyChanged("BookNumber");
					this.OnBookNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string BorrowDate
		{
			get
			{
				return this._BorrowDate;
			}
			set
			{
				if ((this._BorrowDate != value))
				{
					this.OnBorrowDateChanging(value);
					this.SendPropertyChanging();
					this._BorrowDate = value;
					this.SendPropertyChanged("BorrowDate");
					this.OnBorrowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualBorrowNumber", DbType="Int NOT NULL")]
		public int ManualBorrowNumber
		{
			get
			{
				return this._ManualBorrowNumber;
			}
			set
			{
				if ((this._ManualBorrowNumber != value))
				{
					this.OnManualBorrowNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualBorrowNumber = value;
					this.SendPropertyChanged("ManualBorrowNumber");
					this.OnManualBorrowNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerId", DbType="Int NOT NULL")]
		public int BorrowerId
		{
			get
			{
				return this._BorrowerId;
			}
			set
			{
				if ((this._BorrowerId != value))
				{
					if (this._MstBorrower.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBorrowerIdChanging(value);
					this.SendPropertyChanging();
					this._BorrowerId = value;
					this.SendPropertyChanged("BorrowerId");
					this.OnBorrowerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryCardId", DbType="Int NOT NULL")]
		public int LibraryCardId
		{
			get
			{
				return this._LibraryCardId;
			}
			set
			{
				if ((this._LibraryCardId != value))
				{
					if (this._MstLibraryCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLibraryCardIdChanging(value);
					this.SendPropertyChanging();
					this._LibraryCardId = value;
					this.SendPropertyChanged("LibraryCardId");
					this.OnLibraryCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedByUser", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string PreparedByUser
		{
			get
			{
				return this._PreparedByUser;
			}
			set
			{
				if ((this._PreparedByUser != value))
				{
					this.OnPreparedByUserChanging(value);
					this.SendPropertyChanging();
					this._PreparedByUser = value;
					this.SendPropertyChanged("PreparedByUser");
					this.OnPreparedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstLibraryCard_TrnBorrow", Storage="_MstLibraryCard", ThisKey="LibraryCardId", OtherKey="Id", IsForeignKey=true)]
		public MstLibraryCard MstLibraryCard
		{
			get
			{
				return this._MstLibraryCard.Entity;
			}
			set
			{
				MstLibraryCard previousValue = this._MstLibraryCard.Entity;
				if (((previousValue != value) 
							|| (this._MstLibraryCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstLibraryCard.Entity = null;
						previousValue.TrnBorrows.Remove(this);
					}
					this._MstLibraryCard.Entity = value;
					if ((value != null))
					{
						value.TrnBorrows.Add(this);
						this._LibraryCardId = value.Id;
					}
					else
					{
						this._LibraryCardId = default(int);
					}
					this.SendPropertyChanged("MstLibraryCard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnBorrow", Storage="_MstUser", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnBorrows.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnBorrows.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnBorrow1", Storage="_MstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnBorrows1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnBorrows1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBorrower_TrnBorrow", Storage="_MstBorrower", ThisKey="BorrowerId", OtherKey="Id", IsForeignKey=true)]
		public MstBorrower MstBorrower
		{
			get
			{
				return this._MstBorrower.Entity;
			}
			set
			{
				MstBorrower previousValue = this._MstBorrower.Entity;
				if (((previousValue != value) 
							|| (this._MstBorrower.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBorrower.Entity = null;
						previousValue.TrnBorrows.Remove(this);
					}
					this._MstBorrower.Entity = value;
					if ((value != null))
					{
						value.TrnBorrows.Add(this);
						this._BorrowerId = value.Id;
					}
					else
					{
						this._BorrowerId = default(int);
					}
					this.SendPropertyChanged("MstBorrower");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstBorrower")]
	public partial class MstBorrower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BorrowerNumber;
		
		private int _ManualBorrowerNumber;
		
		private string _FullName;
		
		private string _Department;
		
		private string _Course;
		
		private int _CreatedByUserId;
		
		private string _CreatedDate;
		
		private int _UpdatedByUserId;
		
		private string _UpdatedDate;
		
		private int _BorrowerTypeId;
		
		private int _LibraryCardId;
		
		private EntitySet<MstLibraryCard> _MstLibraryCards;
		
		private EntitySet<TrnBorrow> _TrnBorrows;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBorrowerNumberChanging(int value);
    partial void OnBorrowerNumberChanged();
    partial void OnManualBorrowerNumberChanging(int value);
    partial void OnManualBorrowerNumberChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnCourseChanging(string value);
    partial void OnCourseChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateChanging(string value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateChanging(string value);
    partial void OnUpdatedDateChanged();
    partial void OnBorrowerTypeIdChanging(int value);
    partial void OnBorrowerTypeIdChanged();
    partial void OnLibraryCardIdChanging(int value);
    partial void OnLibraryCardIdChanged();
    #endregion
		
		public MstBorrower()
		{
			this._MstLibraryCards = new EntitySet<MstLibraryCard>(new Action<MstLibraryCard>(this.attach_MstLibraryCards), new Action<MstLibraryCard>(this.detach_MstLibraryCards));
			this._TrnBorrows = new EntitySet<TrnBorrow>(new Action<TrnBorrow>(this.attach_TrnBorrows), new Action<TrnBorrow>(this.detach_TrnBorrows));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerNumber", DbType="Int NOT NULL")]
		public int BorrowerNumber
		{
			get
			{
				return this._BorrowerNumber;
			}
			set
			{
				if ((this._BorrowerNumber != value))
				{
					this.OnBorrowerNumberChanging(value);
					this.SendPropertyChanging();
					this._BorrowerNumber = value;
					this.SendPropertyChanged("BorrowerNumber");
					this.OnBorrowerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualBorrowerNumber", DbType="Int NOT NULL")]
		public int ManualBorrowerNumber
		{
			get
			{
				return this._ManualBorrowerNumber;
			}
			set
			{
				if ((this._ManualBorrowerNumber != value))
				{
					this.OnManualBorrowerNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualBorrowerNumber = value;
					this.SendPropertyChanged("ManualBorrowerNumber");
					this.OnManualBorrowerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerTypeId", DbType="Int NOT NULL")]
		public int BorrowerTypeId
		{
			get
			{
				return this._BorrowerTypeId;
			}
			set
			{
				if ((this._BorrowerTypeId != value))
				{
					this.OnBorrowerTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BorrowerTypeId = value;
					this.SendPropertyChanged("BorrowerTypeId");
					this.OnBorrowerTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryCardId", DbType="Int NOT NULL")]
		public int LibraryCardId
		{
			get
			{
				return this._LibraryCardId;
			}
			set
			{
				if ((this._LibraryCardId != value))
				{
					this.OnLibraryCardIdChanging(value);
					this.SendPropertyChanging();
					this._LibraryCardId = value;
					this.SendPropertyChanged("LibraryCardId");
					this.OnLibraryCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBorrower_MstLibraryCard", Storage="_MstLibraryCards", ThisKey="Id", OtherKey="BorrowerId")]
		public EntitySet<MstLibraryCard> MstLibraryCards
		{
			get
			{
				return this._MstLibraryCards;
			}
			set
			{
				this._MstLibraryCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBorrower_TrnBorrow", Storage="_TrnBorrows", ThisKey="Id", OtherKey="BorrowerId")]
		public EntitySet<TrnBorrow> TrnBorrows
		{
			get
			{
				return this._TrnBorrows;
			}
			set
			{
				this._TrnBorrows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBorrower", Storage="_MstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstBorrowers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstBorrowers.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBorrower1", Storage="_MstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstBorrowers1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstBorrowers1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstLibraryCards(MstLibraryCard entity)
		{
			this.SendPropertyChanging();
			entity.MstBorrower = this;
		}
		
		private void detach_MstLibraryCards(MstLibraryCard entity)
		{
			this.SendPropertyChanging();
			entity.MstBorrower = null;
		}
		
		private void attach_TrnBorrows(TrnBorrow entity)
		{
			this.SendPropertyChanging();
			entity.MstBorrower = this;
		}
		
		private void detach_TrnBorrows(TrnBorrow entity)
		{
			this.SendPropertyChanging();
			entity.MstBorrower = null;
		}
	}
}
#pragma warning restore 1591
